{"ast":null,"code":"import { ischeck } from \"./check.js\";\nimport { dpmove, lpmove, kmove, rmove, bmove } from \"./logic.js\";\nexport const ischeckmate = (se, idx, ps, kx, ky) => {\n  var k = 1;\n  var se1 = ps.findIndex(Px => Px.t === `dp`);\n  while (se1 !== -1) {\n    console.log(se1);\n    ps[se1].t = 'xp';\n    var x = ps[se1].x;\n    var y = ps[se1].y;\n    var idx1 = ps.findIndex(Px => Px.key === `n${x + 1}${y + 1}`);\n    if (idx1 === -1) {\n      idx1 = ps.findIndex(Px => Px.key === `d${x + 1}${y + 1}`);\n    }\n    if (idx1 === -1) {\n      idx1 = ps.findIndex(Px => Px.key === `l${x + 1}${y + 1}`);\n    }\n    if (idx1 !== -1) {\n      if (ischeck(ps, kx, ky, idx1, se1) === 0) {\n        k = 0;\n      }\n    }\n    se1 = ps.findIndex(Px => Px.t === `dp`);\n  }\n  var se1 = ps.findIndex(Px => Px.t === `xp`);\n  while (se1 !== -1) {\n    console.log(se1);\n    ps[se1].t = 'dp';\n    se1 = ps.findIndex(Px => Px.t === `xp`);\n  }\n  if (k === 1) {\n    return 1;\n  } else {\n    return 0;\n  }\n};","map":{"version":3,"names":["ischeck","dpmove","lpmove","kmove","rmove","bmove","ischeckmate","se","idx","ps","kx","ky","k","se1","findIndex","Px","t","console","log","x","y","idx1","key"],"sources":["/home/nikhil/Desktop/new chess/fornt_end/src/component/checkmate.js"],"sourcesContent":["import { ischeck } from \"./check.js\";\nimport {dpmove,lpmove,kmove,rmove,bmove} from \"./logic.js\";\nexport const ischeckmate=(se,idx,ps,kx,ky)=> {\n    var k=1;\n    var se1 = ps.findIndex((Px) => Px.t===`dp`);\n    while(se1!==-1){\n        console.log(se1);\n      ps[se1].t='xp';\n      var x=ps[se1].x;\n      var y=ps[se1].y;\n      var idx1 = ps.findIndex((Px) => Px.key===`n${x+1}${y+1}`);\n      if(idx1===-1){idx1=ps.findIndex((Px) => Px.key===`d${x+1}${y+1}`);}\n      if(idx1===-1){idx1=ps.findIndex((Px) => Px.key===`l${x+1}${y+1}`);}\n      if(idx1!==-1){\n      if(ischeck(ps,kx,ky,idx1,se1)===0){\n            k=0;\n      }\n    }\n      se1=ps.findIndex((Px) => Px.t===`dp`);\n    }\n    var se1 = ps.findIndex((Px) => Px.t===`xp`);\n    while(se1!==-1){\n        console.log(se1);\n      ps[se1].t='dp';\n      se1=ps.findIndex((Px) => Px.t===`xp`);\n    }\n    if(k===1){return 1;}\n    else{return 0;}\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAAQC,MAAM,EAACC,MAAM,EAACC,KAAK,EAACC,KAAK,EAACC,KAAK,QAAO,YAAY;AAC1D,OAAO,MAAMC,WAAW,GAACA,CAACC,EAAE,EAACC,GAAG,EAACC,EAAE,EAACC,EAAE,EAACC,EAAE,KAAI;EACzC,IAAIC,CAAC,GAAC,CAAC;EACP,IAAIC,GAAG,GAAGJ,EAAE,CAACK,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACC,CAAC,KAAI,IAAG,CAAC;EAC3C,OAAMH,GAAG,KAAG,CAAC,CAAC,EAAC;IACXI,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;IAClBJ,EAAE,CAACI,GAAG,CAAC,CAACG,CAAC,GAAC,IAAI;IACd,IAAIG,CAAC,GAACV,EAAE,CAACI,GAAG,CAAC,CAACM,CAAC;IACf,IAAIC,CAAC,GAACX,EAAE,CAACI,GAAG,CAAC,CAACO,CAAC;IACf,IAAIC,IAAI,GAAGZ,EAAE,CAACK,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACO,GAAG,KAAI,IAAGH,CAAC,GAAC,CAAE,GAAEC,CAAC,GAAC,CAAE,EAAC,CAAC;IACzD,IAAGC,IAAI,KAAG,CAAC,CAAC,EAAC;MAACA,IAAI,GAACZ,EAAE,CAACK,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACO,GAAG,KAAI,IAAGH,CAAC,GAAC,CAAE,GAAEC,CAAC,GAAC,CAAE,EAAC,CAAC;IAAC;IAClE,IAAGC,IAAI,KAAG,CAAC,CAAC,EAAC;MAACA,IAAI,GAACZ,EAAE,CAACK,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACO,GAAG,KAAI,IAAGH,CAAC,GAAC,CAAE,GAAEC,CAAC,GAAC,CAAE,EAAC,CAAC;IAAC;IAClE,IAAGC,IAAI,KAAG,CAAC,CAAC,EAAC;MACb,IAAGrB,OAAO,CAACS,EAAE,EAACC,EAAE,EAACC,EAAE,EAACU,IAAI,EAACR,GAAG,CAAC,KAAG,CAAC,EAAC;QAC5BD,CAAC,GAAC,CAAC;MACT;IACF;IACEC,GAAG,GAACJ,EAAE,CAACK,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACC,CAAC,KAAI,IAAG,CAAC;EACvC;EACA,IAAIH,GAAG,GAAGJ,EAAE,CAACK,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACC,CAAC,KAAI,IAAG,CAAC;EAC3C,OAAMH,GAAG,KAAG,CAAC,CAAC,EAAC;IACXI,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;IAClBJ,EAAE,CAACI,GAAG,CAAC,CAACG,CAAC,GAAC,IAAI;IACdH,GAAG,GAACJ,EAAE,CAACK,SAAS,CAAEC,EAAE,IAAKA,EAAE,CAACC,CAAC,KAAI,IAAG,CAAC;EACvC;EACA,IAAGJ,CAAC,KAAG,CAAC,EAAC;IAAC,OAAO,CAAC;EAAC,CAAC,MAChB;IAAC,OAAO,CAAC;EAAC;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}