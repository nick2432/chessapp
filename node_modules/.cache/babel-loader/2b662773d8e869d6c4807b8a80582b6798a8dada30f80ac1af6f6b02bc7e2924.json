{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/new chess/fornt_end/src/component/timer.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect, useRef } from \"react\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [time, setTime] = useState(0);\n  const [secondsLeft, setSecondsLeft] = useState(0);\n  const secondsLeftRef = useRef(secondsLeft);\n  useEffect(() => {\n    setTime(prev => prev += 1);\n  });\n  const percentage = Math.round(0 / 100);\n  let seconds = secondsLeft % 60;\n  if (seconds < 10) seconds = '0' + seconds;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: percentage,\n      text: 3 + ':' + seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"rotP2PEKvqdlOSXKtuoMQNMqubY=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useContext","useState","useEffect","useRef","CircularProgressbar","buildStyles","jsxDEV","_jsxDEV","Timer","_s","time","setTime","secondsLeft","setSecondsLeft","secondsLeftRef","prev","percentage","Math","round","seconds","children","value","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nikhil/Desktop/new chess/fornt_end/src/component/timer.js"],"sourcesContent":["import {useContext, useState, useEffect, useRef} from \"react\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport default function Timer() {\n  const [time,setTime] =useState(0); \n  const [secondsLeft, setSecondsLeft] = useState(0);\n  const secondsLeftRef = useRef(secondsLeft);\n  useEffect(()=>{\n      setTime(prev => prev +=1);\n  })\n  const percentage = Math.round(0 /  100);\n  let seconds = secondsLeft % 60;\n  if(seconds < 10) seconds = '0'+seconds;\n  return (\n    <div>\n      <CircularProgressbar \n      value={percentage}\n      text={3 + ':' + seconds}\n      />\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAC7D,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,4BAA4B;AAC7E,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEV,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMa,cAAc,GAAGX,MAAM,CAACS,WAAW,CAAC;EAC1CV,SAAS,CAAC,MAAI;IACVS,OAAO,CAACI,IAAI,IAAIA,IAAI,IAAG,CAAC,CAAC;EAC7B,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,GAAI,GAAG,CAAC;EACvC,IAAIC,OAAO,GAAGP,WAAW,GAAG,EAAE;EAC9B,IAAGO,OAAO,GAAG,EAAE,EAAEA,OAAO,GAAG,GAAG,GAACA,OAAO;EACtC,oBACEZ,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACH,mBAAmB;MACpBiB,KAAK,EAAEL,UAAW;MAClBM,IAAI,EAAE,CAAC,GAAG,GAAG,GAAGH;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACjB,EAAA,CAlBuBD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}