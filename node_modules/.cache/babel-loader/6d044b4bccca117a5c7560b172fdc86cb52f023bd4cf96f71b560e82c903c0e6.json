{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/new chess/fornt_end/src/component/timer.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect, useRef } from \"react\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer() {\n  _s();\n  const [secondsLeft, setSecondsLeft] = useState(0);\n  const secondsLeftRef = useRef(secondsLeft);\n  const [mode, setMode] = useState('work');\n  const modeRef = useRef(mode);\n  const totalSeconds = mode === 'work' ? 60 : 60;\n  const percentage = Math.round(secondsLeft / totalSeconds * 100);\n  let seconds = secondsLeft % 60;\n  if (seconds < 10) seconds = '0' + seconds;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: percentage,\n      text: 3 + ':' + seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"4S6s74Qw1uVrKYDkbg5KYvB1/j0=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useContext","useState","useEffect","useRef","CircularProgressbar","buildStyles","jsxDEV","_jsxDEV","Timer","_s","secondsLeft","setSecondsLeft","secondsLeftRef","mode","setMode","modeRef","totalSeconds","percentage","Math","round","seconds","children","value","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nikhil/Desktop/new chess/fornt_end/src/component/timer.js"],"sourcesContent":["import {useContext, useState, useEffect, useRef} from \"react\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport default function Timer() {\n\n  const [secondsLeft, setSecondsLeft] = useState(0);\n  const secondsLeftRef = useRef(secondsLeft);\n  const [mode, setMode] = useState('work');\n  const modeRef = useRef(mode);\n  const totalSeconds = mode === 'work'\n    ?  60\n    :  60;\n  const percentage = Math.round(secondsLeft / totalSeconds * 100);\n\n \n  let seconds = secondsLeft % 60;\n  if(seconds < 10) seconds = '0'+seconds;\n  return (\n    <div>\n      <CircularProgressbar \n      value={percentage}\n      text={3 + ':' + seconds}\n      />\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAAQA,UAAU,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAC7D,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,4BAA4B;AAC7E,OAAO,4CAA4C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMW,cAAc,GAAGT,MAAM,CAACO,WAAW,CAAC;EAC1C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAMc,OAAO,GAAGZ,MAAM,CAACU,IAAI,CAAC;EAC5B,MAAMG,YAAY,GAAGH,IAAI,KAAK,MAAM,GAC/B,EAAE,GACF,EAAE;EACP,MAAMI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACT,WAAW,GAAGM,YAAY,GAAG,GAAG,CAAC;EAG/D,IAAII,OAAO,GAAGV,WAAW,GAAG,EAAE;EAC9B,IAAGU,OAAO,GAAG,EAAE,EAAEA,OAAO,GAAG,GAAG,GAACA,OAAO;EACtC,oBACEb,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACH,mBAAmB;MACpBkB,KAAK,EAAEL,UAAW;MAClBM,IAAI,EAAE,CAAC,GAAG,GAAG,GAAGH;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAClB,EAAA,CAtBuBD,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}